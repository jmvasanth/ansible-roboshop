- name: Install Shipping Component
  hosts: shipping
  become: yes
  tasks:

  - name: Install Maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: Check Roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out # Output is variable name
    ignore_errors: true

  - when: out.rc != 0
    name: Create user roboshop
    become: yes 
    ansible.builtin.user:
      name: roboshop

  - name: Check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: Print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: Create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download Shipping artifact & extract
    ansible.builtin.unarchive:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args: 
      chdir: /app

  - name: Rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: Copy Shipping Service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  
  - name: Daemon Reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: Start Shipping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: true

  - name:  Install MySQL client
    ansible.builtin.yum:
      name: mysql
      state: installed